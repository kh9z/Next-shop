generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String?
  password  String
  role      Role      @default(USER)
  orders    Order[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id          String       @id @default(uuid())
  name        String
  description String?
  price       Int          // у копійках (наприклад, 1000 = 10.00 грн)
  imageUrl    String?
  category    Category?    @relation(fields: [categoryId], references: [id])
  categoryId  String?
  orderItems  OrderItem[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Category {
  id        String     @id @default(uuid())
  name      String     @unique
  products  Product[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Order {
  id         String       @id @default(uuid())
  user       User         @relation(fields: [userId], references: [id])
  userId     String
  items      OrderItem[]
  total      Int
  status     OrderStatus  @default(PENDING)
  payment    Payment?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model OrderItem {
  id        String   @id @default(uuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int      @default(1)
}

model Payment {
  id        String    @id @default(uuid())
  order     Order     @relation(fields: [orderId], references: [id])
  orderId   String    @unique
  stripeId  String    @unique
  amount    Int
  status    PaymentStatus
  createdAt DateTime  @default(now())
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  COMPLETED
  CANCELED
}

enum PaymentStatus {
  PENDING
  SUCCESS
  FAILED
}